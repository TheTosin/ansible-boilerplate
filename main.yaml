---
- name: Deploy and configure Java boilerplate application
  hosts: hng
  become: yes

  vars:
    db_user: "admin"
    db_name: "stage_5b_db"
    db_password: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=12') }}"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - git
          - openjdk-17-jdk
          - maven
          - postgresql
          - postgresql-contrib
          - python3-psycopg2
          - rabbitmq-server
          - nginx
        state: present

    - name: Create hng user with sudo privileges
      user:
        name: hng
        groups: sudo
        state: present
        shell: /bin/bash

    - name: Ensure /opt/stage_5b directory exists
      file:
        path: /opt/stage_5b
        state: directory
        owner: hng
        group: hng
        mode: '0755'

    - name: Add /opt/stage_5b as a safe directory for Git
      ansible.builtin.shell:
        cmd: git config --global --add safe.directory /opt/stage_5b

    - name: Clone repository
      git:
        repo: "https://github.com/hngprojects/hng_boilerplate_java_web.git"
        version: "devops"
        dest: /opt/stage_5b
      become: yes

    - name: Configure PostgreSQL
      block:
        - name: Create PostgreSQL user
          command: sudo -u postgres psql -c "CREATE USER '{{ db_user }}' WITH PASSWORD '{{ db_password }}'; ALTER USER '{{ db_user }}' WITH SUPERUSER;"
          ignore_errors: yes

        - name: Create PostgreSQL database
          command: sudo -u postgres psql -c "CREATE DATABASE '{{ db_name }}' OWNER '{{ db_user }}';"
          ignore_errors: yes

    - name: Ensure /var/secrets directory exists
      file:
        path: /var/secrets
        state: directory
        mode: '0750'
        owner: root
        group: root

    - name: Save PostgreSQL credentials
      copy:
        content: "{{ db_user }}:{{ db_password }}"
        dest: /var/secrets/pg_pw.txt
        mode: '0600'

    - name: Ensure environment variables are set
      lineinfile:
        path: /opt/stage_5b/.env
        line: "{{ item }}"
        create: yes
      loop:
        - "HOST=127.0.0.1"
        - "PORT=3000"

    - name: Update pom.ml with Spring Boot dependencies
      template:
        src: pom.xml.j2
        dest: /opt/stage_5b/pom.xml
      become: yes

    - name: Configure RabbitMQ
      systemd:
        name: rabbitmq-server
        state: started
        enabled: yes

    - name: Resolve Maven dependencies
      command: mvn dependency:resolve
      args:
        chdir: /opt/stage_5b

    - name: Create application.properties
      copy:
        content: |
          spring.datasource.url=jdbc:postgresql://localhost:5432/{{ db_name }}
          spring.datasource.username={{ db_user }}
          spring.datasource.password={{ db_password }}
          spring.jpa.hibernate.ddl-auto=update
          server.port=3000
          spring.rabbitmq.host=localhost
          spring.rabbitmq.port=5672
          spring.rabbitmq.username=guest
          spring.rabbitmq.password=guest
          #spring.flyway.enabled=true
          #spring.flyway.baseline-on-migrate=true
          #spring.flyway.location=classpath:db/migration
          #spring.flyway.url=jdbc:postgresql://localhost:5432/{{ db_name }}
          #spring.flyway.user={{ db_user }}
          #spring.flyway.password={{ db_password }}
          #spring.flyway.baseline-version=1
        dest: "/opt/stage_5b/src/main/resources/application.properties"

    - name: Build Java application
      command: mvn clean package
      args:
        chdir: /opt/stage_5b

    - name: Create systemd service file
      copy:
        content: |
          [Unit]
          Description=Stage 5B Java Application
          After=network.target

          [Service]
          User=hng
          WorkingDirectory=/opt/stage_5b
          ExecStart=/usr/bin/java -jar /opt/stage_5b/target/hng-java-boilerplate-0.0.1-SNAPSHOT.jar
          Restart=always
          StandardOutput=append:/var/log/stage_5b/out.log
          StandardError=append:/var/log/stage_5b/error.log

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/stage_5b.service

    - name: Start and enable application service
      systemd:
        name: stage_5b
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Add Nginx signing key
      apt_key:
        url: https://nginx.org/keys/nginx_signing.key
        state: present

    - name: Add Nginx repository
      apt_repository:
        repo: "deb http://nginx.org/packages/ubuntu {{ ansible_distribution_release }} nginx"
        state: present
        filename: nginx

    - name: Update apt cache
      apt:
        update_cache: yes


    - name: Install Nginx
      apt:
        name: nginx=1.26.*
        state: present
      become: yes

    - name: Configure Nginx reverse proxy application
      copy:
        content: |
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://127.0.0.1:3000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
              }
          }
        dest: /etc/nginx/sites-available/stage_5b
      notify:
        - Reload Nginx

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/stage_5b
        dest: /etc/nginx/sites-enabled/stage_5b
        state: link
      notify:
        - Reload Nginx

    - name: Remove default Nginx configuration
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify:
        - Reload Nginx

    - name: Create log directory
      file:
        path: /var/log/stage_5b
        state: directory
        owner: hng
        group: hng
        mode: '0755'

    - name: Set up logging in .env
      blockinfile:
        path: /opt/stage_5b/.env
        block: |
          LOG_STDERR=/var/log/stage_5b/error.log
          LOG_STDOUT=/var/log/stage_5b/out.log
        create: yes

    - name: Configure log rotation
      copy:
        dest: /etc/logrotate.d/stage_5b
        content: |
          /var/log/stage_5b/*.log {
            daily
            missingok
            rotate 7
            compress
            delaycompress
            notifempty
            create 0644 hng hng
            sharedscripts
            postrotate
              systemctl reload nginx > /dev/null 2>&1 || true
            endscript
          }

  handlers:
    - name: Reload Nginx
      systemd:
        name: nginx
        state: reloaded
