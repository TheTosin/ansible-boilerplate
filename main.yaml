---
- name: Deploy and configure the boilerplate application
  hosts: hng
  become: yes

  tasks:
    - name: Create user 'hng'
      user:
        name: hng
        state: present
        groups: sudo
        shell: /bin/bash

    - name: Ensure /opt/stage_5b directory exists
      file:
        path: /opt/stage_5b
        state: directory
        owner: hng
        group: hng

    - name: Install required packages
      apt:
        name:
          - git
          - nginx
          - postgresql
          - rabbitmq-server
          - mevan
          - openjdk-17-jdk
      state: present
      update_cache: yes

    - name: Clone repository
      git:
        repo: 'https://github.com/hngprojects/hng_boilerplate_java_web.git'
        dest: /opt/stage_5b
        version: devops
        force: yes
                accept_hostkey: yes
      become_user: hng
      become: yes

    - name: Build Java application
      command: mvn clean package
      args:
        chdir: "/opt/stage_5b"
      become_user: hng

    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present
        update_cache: yes
      become: yes

    - name: Start and enable PostgreSQL service
      service:
        name: postgresql
        state: started
        enabled: yes
      become: yes

    - name: Generate PostgreSQL credentials
          set_fact:
       pg_admin: "pg_admin_user"
       pg_password: "lookup('password', '/dev/null length=20 chars=ascii_letters')"

    - name: Set PostgreSQL password and create user
      become_user: postgres
      postgresql_user:
        name: pg_admin
        password: "pg_password"
        state: present

    - name: Save PostgreSQL credentials
      copy:
        content:
          user: pg_admin
          password: pg_password
        dest: /var/secrets/pg_pw.txt
        owner: hng
        group: hng
        mode: '0600'
      become: yes

    - name: Install Java
      apt:
        name: default-jdk
        state: present
        update_cache: yes
      become: yes

    - name: Install Maven (if needed)
      apt:
        name: maven
        state: present
        update_cache: yes
      become: yes

    - name: Build Java application with Maven
          shell: mvn clean install -DskipTests
      args:
        chdir: /opt/stage_5b
      become_user: hng
      become: yes

   - name: Ensure environment variables are set
     lineinfile:
       path: /opt/stage_5b/.env
       line: "item"
       create: yes
       owner: hng
       group: hng
       mode: '0600'
     loop:
       - "HOST=127.0.0.1"
       - "PORT=3000"
     become: yes

    - name: Install RabbitMQ
      hosts: hng
      become: yes

    - name: Install RabbitMQ server
      apt:
        name: rabbitmq-server
        state: present
        update_cache: yes
        become: yes

    - name: Enable and start RabbitMQ service
      systemd:
        name: rabbitmq-server
        enabled: yes
        state: started

    - name: Configure application properties
      template:
              src: application.properties.j2
        dest: "/opt/stage_5b/src/main/resources/application.properties"
      become_user: hng

    - name: Set up application service
      template:
        src: app.service.j2
        dest: /etc/systemd/system/stage_5b.service

    - name: Start and enable application service
      systemd:
        name: stage_5b
        state: started
        enabled: yes

    - name: Install Nginx
      apt:
        name: nginx=1.26.*
        state: present
      become: yes

    - name: Configure Nginx reverse proxy application
      template:
        src: nginx_config.j2
        dest: /etc/nginx/sites-available/stage_5b
      notify:
        - Restart Nginx
      become: yes

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/stage_5b
        dest: /etc/nginx/sites-enabled/stage_5b
        state: link
        notify: restart nginx
              become: yes

    - name: Remove default Nginx configuration
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx
      become: yes

    - name: Set up logging
      lineinfile:
        path: /opt/stage_5b/.env
        line: |
          LOG_STDERR=/var/log/stage_5b/error.log
          LOG_STDOUT=/var/log/stage_5b/out.log
      create: yes
      owner: hng
      group: hng
      mode: 0644
      become: yes

   - name: Set up log rotation for application logs
     copy:
       dest: /etc/logrotate.d/stage_5b
       content: |
         /var/log/stage_5b/*.log {
           daily
           missingok
           rotate 14
           compress
           delaycompress
           notifempty
           create 0640 hng hng
           sharedscripts
           postrotate
             systemctl reload nginx > /dev/null 2>&1 || true
           endscript
         }
         
  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
      become: yes
